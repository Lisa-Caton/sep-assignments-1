Exercises
Answer the following questions and submit the responses in the submission tab.

1. Write out a generic SELECT statement.
  Display all fields in the cars table for cars made in 2016.

2. Create a fun way to remember the order of operations in a SELECT statement, 
such as a mnemonic.
  Senile - Female - Whacked - Gifted - Hero - Overboard

  SELECT
  FROM
  WHERE
  GROUP BY
  HAVING
  ORDER BY

3. Given this dogs table, write queries to select the following pieces of data:
  Display the name, gender, and age of all dogs that are part Labrador.
    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%Labrador%';

  Display the ids of all dogs that are under 1 year old.
    SELECT id 
    FROM dogs
    WHERE age < 1;

  Display the name and age of all dogs that are female and over 35lbs.
    SELECT name, age 
    FROM dogs
    WHERE gender = 'F' AND weight > 35;

  Display all of the information about all dogs that are not Shepherd mixes.
    SELECT *
    FROM dogs 
    WHERE breed <> '%Shepherd%';

  Display the id, age, weight, and breed of all dogs that are either over 60lbs or 
  Great Danes.
    SELECT id, age, weight, breed
    FROM dogs
    WHERE weight > 60 OR breed = 'Great Dane';

4. Given this cats table, what records are returned from these queries?
  SELECT name, adoption_date FROM cats;
      'Mushi', '2016-03-22'
      'Seashell', NULL
      'Azul', '2016-04-17'
      'Victoire', '2016-09-01'
      'Nala', NULL

  SELECT name, age FROM cats;
      'Mushi', 1
      'Seashell', 7
      'Azul', 3
      'Victoire', 7
      'Nala', 1

5. From the cats table, write queries to select the following pieces of data.
  Display all the information about all of the available cats.
    SELECT * FROM cats WHERE adoption_date IS NULL;

  Display the name and sex of all cats who are 7 years old.
    SELECT name, gender FROM cats WHERE age = 7;

  Find all of the names of the cats, so you don’t choose duplicate names 
  for new cats.
    SELECT name FROM cats;

6. List each comparison operator and explain, in your own words, when you 
would use it. Include a real world example for each.
    > Greater than, used when comparing 2 values
      [...WHERE age > 3 ]
    < Less than, used when comparing 2 values
      [...WHERE age < 3 ]
    = Equal to, used when comparing 2 values
      [...WHERE age = 3 ]
    <= Less than or equal to, used when comparing 2 values
      [...WHERE age <= 3 ]
    >= Greater than or equal to, used when comparing 2 values
      [...WHERE age >= 3 ]
    <> / != Not equal to, used when comparing 2 values
      [...WHERE incoming_date <> outgoing_date ]
    LIKE Used to pattern match a string
      [...WHERE model LIKE '%Ford%' ]
    BETWEEN Implemented like "a BETWEEN x AND y", 
      this is equivalent to "a >= x AND a <= y"
      [...WHERE first_letter BETWEEN 'L' AND 'P' ]
    IS DISTINCT FROM Used as "expression IS DISTINCT FROM expression", 
      this should be used in place of <> when one of the inputs could be null.
      [...WHERE model IS DISTINCT FROM 'Ford' ]
    IS TRUE / IS FALSE Used when the input could be null. 
      [...WHERE mission_complete IS TRUE ]
    IS NULL / IS NOT NULL Determines if the contents of a cell are null or not.
      [...WHERE model IS NULL ]
    AND Requires both expressions to be true for the row to be returned.
      [...WHERE model = 'Ford' AND year = 2016 ]
    OR Requires one of the expressions to be true for the row to be returned
      [...WHERE model = 'Ford' OR year = 2016 ]
    NOT Requires the expression to be false for the row to be returned
      [...WHERE model NOT 'Ford' ]

7. From the cats table, what data is returned from these queries?
  SELECT name FROM cats WHERE gender = ‘F’;
    'Seashell', 
    'Nala'

  SELECT name FROM cats WHERE age <> 3;
    'Mushi',
    'Seashell',
    'Victoire',
    'Nala'

  SELECT id FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
    'Azul',
    'Victoire'
